// <auto-generated />
using Bohemian_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bohemian_API.Migrations
{
    [DbContext(typeof(BohemianContext))]
    [Migration("20220914183139_Rhap")]
    partial class Rhap
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bohemian_API.Models.Album", b =>
                {
                    b.Property<int>("Album_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Album_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Artist_Id")
                        .HasColumnType("int");

                    b.HasKey("Album_Id");

                    b.HasIndex("Artist_Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Bohemian_API.Models.Artist", b =>
                {
                    b.Property<int>("Artist_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Artist_Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Bohemian_API.Models.Genre", b =>
                {
                    b.Property<int>("Genre_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Genre_Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Bohemian_API.Models.Song", b =>
                {
                    b.Property<int>("Song_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.Property<int>("Genre_Id")
                        .HasColumnType("int");

                    b.Property<string>("Song_Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Song_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Song_Id");

                    b.HasIndex("Album_Id");

                    b.HasIndex("Genre_Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Bohemian_API.Models.Album", b =>
                {
                    b.HasOne("Bohemian_API.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("Artist_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bohemian_API.Models.Song", b =>
                {
                    b.HasOne("Bohemian_API.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("Album_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bohemian_API.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("Genre_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
